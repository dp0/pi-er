---
- hosts: all
  vars_prompt:
    - name: sd_device
      prompt: "What is the SD card device?"
      private: no
    - name: image_file
      prompt: "Where is the image file?"
      private: no

  gather_facts: no

  tasks:
    - name: check one host only
      fail:
        msg: Can only provision one host at a time.
      when:
        ' play_hosts|length != 1'

    - name: get list of partitions for disk
      delegate_to: localhost
      connection: local
      command: 'lsblk -JlpoNAME "{{ sd_device }}"'
      register: device_files_obj
      changed_when: no

    - name: ensure all devices unmounted
      delegate_to: localhost
      connection: local
      command: 'umount {{ item.name }}'
      become: yes
      register: result
      failed_when:
        - 'result.rc != 0'
        - '"not mounted" not in result.stderr'
      changed_when:
        - 'result.rc == 0'
      with_items:
          '{{ (device_files_obj.stdout|from_json).blockdevices }}'

    - name: ensure image written to disk
      delegate_to: localhost
      connection: local
      command: 'dd "if={{ image_file }}" bs=1M status=progress "of={{ sd_device }}" oflag=sync'
      become: yes

    - name: ensure filesystem synced
      delegate_to: localhost
      connection: local
      command: 'sync'
      become: yes

    - name: get list of partitions for newly written disk
      delegate_to: localhost
      connection: local
      command: 'lsblk -JlpoNAME,LABEL,FSTYPE "{{ sd_device }}"'
      register: new_device_files_obj
      changed_when: no

    - name: create temp root mount dir
      delegate_to: localhost
      connection: local
      tempfile:
        state: directory
        suffix: pier_sd_root
      register: root_mount_dir

    - name: mount new sd root disk
      delegate_to: localhost
      connection: local
      mount:
        path: '{{ root_mount_dir.path }}'
        src: '{{ (new_device_files_obj.stdout|from_json).blockdevices|
          selectattr("label", "equalto", "boot")|
          map(attribute="name")|first }}'
        fstype: '{{ (new_device_files_obj.stdout|from_json).blockdevices|
          selectattr("label", "equalto", "boot")|
          map(attribute="fstype")|first }}'
        state: mounted

    - name: ensure ssh enabled
      delegate_to: localhost
      connection: local
      copy:
        content: ''
        dest: '{{ root_mount_dir.path }}/ssh'
        force: no
        group: root
        owner: root
        mode: 0755

    - name: ensure filesystem synced
      delegate_to: localhost
      connection: local
      command: 'sync'
      become: yes

    - name: ensure all devices unmounted
      delegate_to: localhost
      connection: local
      command: 'umount {{ item.name }}'
      become: yes
      register: result
      failed_when:
        - 'result.rc != 0'
        - '"not mounted" not in result.stderr'
      changed_when:
        - 'result.rc == 0'
      with_items:
          '{{ (new_device_files_obj.stdout|from_json).blockdevices }}'
